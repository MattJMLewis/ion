// Copyright (c) 2016-2018 Clearmatics Technologies Ltd
// SPDX-License-Identifier: LGPL-3.0+

const Web3Utils = require('web3-utils');
const BN = require('bignumber.js')
const merkle = require('./helpers/merkle.js')
const encoder = require('./helpers/encoder.js')
const Trie = require('merkle-patricia-tree');
const rlp = require('rlp');
const async = require('async')
const EthereumTx = require('ethereumjs-tx');
const EthereumBlock = require('ethereumjs-block/from-rpc')
const levelup = require('levelup');
const sha3 = require('js-sha3').keccak_256
const EP = require('eth-proof');

const Web3 = require('web3');

const Ion = artifacts.require("Ion");
const PatriciaTrie = artifacts.require("PatriciaTrie");

require('chai')
 .use(require('chai-as-promised'))
 .should();

const DEPLOYEDCHAINID = "0xab830ae0774cb20180c8b463202659184033a9f30a21550b89a2b406c3ac8075"

const TESTCHAINID = "0x22b55e8a4f7c03e1689da845dd463b09299cb3a574e64c68eafc4e99077a7254"
const TESTBLOCK = {
    difficulty: 12549329517745,
    extraData: "0xd783010303844765746887676f312e352e31856c696e7578",
    gasLimit: 3141592,
    gasUsed: 63000,
    hash: "0x95c3a05973fec7bf98f1131a72e607b4eba171d0576571cf83ee7162bbcdb7d9",
    logsBloom: "0x
    miner: "0x95581ea0c5b362933f3523138f54d51eae817211",
    mixHash: "0xa01f9d00ac510a726f883459834e30cfe085f47b04e22f72207f5a9e9d652ca6",
    nonce: "0x1c080c4ec6f2553b",
    number: 1000002,
    parentHash: "0xcb5cab7266694daa0d28cbf40496c08dd30bf732c41e0455e7ad389c10d79f4f",
    receiptsRoot: "0x97097902b6b4d6b695ef16b923e33b8780d95cf4bd54540ac450deb019d07647",
    sha3Uncles: "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
    size: 883,
    stateRoot: "0x643430d1afc3f02ce5249e4ba5979fb8601b1907a5923a4a74d36d66321a27e5",
    timestamp: 1455404078,
    totalDifficulty: 7135227569124568698,
    transactions: ["0x2bd653c639c086ad1c6e468d2cbdba76fc144f747373be6d2db7854d0d0e36e7", "0x7e3abff232dd5fc72db441807bcd59d9f17311a960a8f6ff6d0e693c22fa1eb2", "0x07a911c87c6e656e2f83c30e0cbdac47789fd874c747337ad1776b7dd5238893"],
    transactionsRoot: "0xdbdf7457111e50e435853974d5412c2151fde6e3c2e3f5aecc253aa4cb21fce2",
    uncles: []
}

const TESTRLPENCODING = "0xf90217a0cb5cab7266694daa0d28cbf40496c08dd30bf732c41e0455e7ad389c10d79f4fa01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d493479495581ea0c5b362933f3523138f54d51eae817211a0643430d1afc3f02ce5249e4ba5979fb8601b1907a5923a4a74d36d66321a27e5a0dbdf7457111e50e435853974d5412c2151fde6e3c2e3f5aecc253aa4cb21fce2a097097902b6b4d6b695ef16b923e33b8780d95cf4bd54540ac450deb019d07647bb69de53fcb1830f4242832fefd882f6188456bfb42e98d783010303844765746887676f312e352e31856c696e7578a0a01f9d00ac510a726f883459834e30cfe085f47b04e22f72207f5a9e9d652ca6881c080c4ec6f2553b"
const TEST_PATH = "0x02"

const TEST_TX_VALUE = "0xf8708302a122850ba43b740083015f909453e0551a1e31a40855bc8e086eb8db803a625bbf880e861ef96aefa800801ca03a92b0a4ffd7f8774688325c1306387e15e64225d03a5a43aeceaf2e53ea782da033f501d040a857572b747e7a0968f269107e34dae093f901b380423937862084"
const TEST_TX_NODES = "0xf9011df851a0f2c8598d0469e213e269219f0f631bf9834344426238de6b986cf64e8ab7a76a80808080808080a04a397832771093a06e1fbfde782a2fc1624f214d090825c065d301f0325e0c7b8080808080808080f85180a0a6177c642f5f21f80f5e7ba81558bfb253da9fbe0bcedc768433cbff6f973073a0d56c80e3abbe59dfa6b65f3640f8f0661b485b76c44379d3c478545c59e508a48080808080808080808080808080f87520b872f8708302a122850ba43b740083015f909453e0551a1e31a40855bc8e086eb8db803a625bbf880e861ef96aefa800801ca03a92b0a4ffd7f8774688325c1306387e15e64225d03a5a43aeceaf2e53ea782da033f501d040a857572b747e7a0968f269107e34dae093f901b380423937862084"

const TEST_RECEIPT_VALUE = "0xf90128a0bbc7f826deb035ff86a12507aa7c967c931e920deffcf82bb61109267d88cab482f618bc0"
const TEST_RECEIPT_NODES = "0xf901d8f851a0e174e998404ccb578d781d64efceb6bf63547f4aed3d801e67229f1fbd827c6480808080808080a06e2f5c4a84018daf85387f2a09955f2fb535d8d459b867aabd0235ba97d991738080808080808080f85180a07d4e8719e289768c06065586d7e5b56a73b8c81e724724476ed75c9b5b59a5caa02eb7a5cd9716b4b4824e556c2df895a60fa6a0b68bd093081d24ba93eea522488080808080808080808080808080f9012f20b9012bf90128a0bbc7f826deb035ff86a12507aa7c967c931e920deffcf82bb61109267d88cab482f618bc0"

//{ difficulty: 2,
//  extraData: '0xd88301080b846765746888676f312e31302e32856c696e757800000000000000a317eac1407c2095a544b7574618e307f4a3308489c9570a87424fd8057714b20701902291849b8586a1d5044282a638017429bfcd36cd01d145515ce3fac5b201',
//  gasLimit: 447846308142,
//  gasUsed: 1395032,
//  hash: '0x53e7275992ff72155dbacfde26881872d7b322afe47b104c7e96079761100a55',
//  logsBloom: '0x
//  miner: '0x0000000000000000000000000000000000000000',
//  mixHash: '0x0000000000000000000000000000000000000000000000000000000000000000',
//  nonce: '0x0000000000000000',
//  number: 15108,
//  parentHash: '0x07844784b5ed519502da2708ecbc1a3f918bae7b3daba06bd55e08f3dcaa42c9',
//  receiptsRoot: '0x6fc7cc2a8c59c0e2c84fe806d652e636d1a513b9c3cefbe0b53920c5787a1e2c',
//  sha3Uncles: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347',
//  size: 5758,
//  stateRoot: '0x732b314700d866f88c612c8ae3cc74c91f2e873b66ae13eb8cb5f54780441d14',
//  timestamp: 1531404477,
//  totalDifficulty: 30217,
//  transactions:
//   [ '0xb8aece2b5060358b4eb788a64e240bd29fa82c6edd277b4b7d58c9a8b6b57959' ],
//  transactionsRoot: '0xf79d0f0f21b250c65ce2817fde4f2d4bf2edb23de4b1f06550a8f2fa8e34aa4e',
//  uncles: [] }
//EP Root hash = 0xf79d0f0f21b250c65ce2817fde4f2d4bf2edb23de4b1f06550a8f2fa8e34aa4e
//PATH = 0x80
//RLP ENCODED NODE = 0xf9141d822080b91417f91414820c5f85174876e800836691b78080b913bd608060405234801561001057600080fd5b5060405160208061139d8339810160405251600055611369806100346000396000f30060806040526004361061007f5763ffffffff60e060020a600035041663550325b581146100845780635a0235e4146100ae5780636b4f9b9d14610110578063927a32e3146101605780639a8a0592146101965780639e43d86b146101ab578063affd8be9146101c3578063bec205b9146102b3578063fecc37c31461038f575b600080fd5b34801561009057600080fd5b5061009c6004356103aa565b60408051918252519081900360200190f35b3480156100ba57600080fd5b50604080516020600460443581810135601f810184900484028501840190955284845261010e9482359460248035953695946064949201919081908401838280828437509497506103c99650505050505050565b005b34801561011c57600080fd5b5061012860043561056e565b6040518082606080838360005b8381101561014d578181015183820152602001610135565b5050505090500191505060405180910390f35b34801561016c57600080fd5b506101786004356105b5565b60408051938452602084019290925282820152519081900360600190f35b3480156101a257600080fd5b5061009c6105d6565b3480156101b757600080fd5b5061010e6004356105dc565b3480156101cf57600080fd5b50604080516020600460443581810135601f810184900484028501840190955284845261029f94823594602480359536959460649492019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375094975061071b9650505050505050565b604080519115158252519081900360200190f35b3480156102bf57600080fd5b50604080516020600460443581810135601f810184900484028501840190955284845261029f94823594602480359536959460649492019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a999881019791965091820194509250829150840183828082843750949750610a9a9650505050505050565b34801561039b57600080fd5b5061009c600435602435610deb565b60018054829081106103b857fe5b600091825260209091200154905081565b60606000808581805b60015481101561040e5760018054829081106103ea57fe5b600091825260209091200154831415610406576001915061040e565b6001016103d2565b811515610465576040805160e560020a62461bcd02815260206004820152601760248201527f436861696e206973206e6f742072656769737465726564000000000000000000604482015290519081900360640190fd5b61047661047188610e1b565b610e6e565b9550866040518082805190602001908083835b602083106104a85780518252601f199092019160209182019101610489565b5181516020939093036101000a600019018019909116921691909117905260405192018290039091209750505088861490506104e357600080fd5b6000888152600360205260408120875190955061051f9161051891899190811061050957fe5b90602001906020020151610f23565b6001610f77565b8455855161053890610518908890600490811061050957fe5b6001850155855161055490610518908890600590811061050957fe5b60028501556105638989611005565b505050505050505050565b6105766112e6565b50600081815260036020908152604091829020825160608101845281548152600182015492810192909252600281015492820192909252905b50919050565b60036020526000908152604090208054600182015460029092015490919083565b60005481565b6000805482141561065d576040805160e560020a62461bcd02815260206004820152602a60248201527f43616e6e6f7420616464207468697320636861696e20696420746f206368616960448201527f6e20726567697374657200000000000000000000000000000000000000000000606482015290519081900360840190fd5b5060005b6001548110156106e657600180548391908390811061067c57fe5b60009182526020909120015414156106de576040805160e560020a62461bcd02815260206004820152601460248201527f436861696e20616c726561647920657869737473000000000000000000000000604482015290519081900360640190fd5b600101610661565b506001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60155565b6000808681805b60015481101561075e57600180548290811061073a57fe5b600091825260209091200154831415610756576001915061075e565b600101610722565b8115156107b5576040805160e560020a62461bcd02815260206004820152601760248201527f436861696e206973206e6f742072656769737465726564000000000000000000604482015290519081900360640190fd5b60008a81526002602052604081208b918b91815b81548110156108045781818154811015156107e057fe5b6000918252602090912001548414156107fc5760019250610804565b6001016107c9565b82151561085b576040805160e560020a62461bcd02815260206004820152601e60248201527f426c6f636b20646f6573206e6f7420657869737420666f7220636861696e0000604482015290519081900360640190fd5b600360008f6000191660001916815260200190815260200160002098507338800a01ecf096d73c62878ac8e183bfe92cd82d634f7142ad8e8e8e8d600101546040518563ffffffff1660e060020a028152600401808060200180602001806020018560001916600019168152602001848103845288818151815260200191508051906020019080838360005b838110156108ff5781810151838201526020016108e7565b50505050905090810190601f16801561092c5780820380516001836020036101000a031916815260200191505b50848103835287518152875160209182019189019080838360005b8381101561095f578181015183820152602001610947565b50505050905090810190601f16801561098c5780820380516001836020036101000a031916815260200191505b50848103825286518152865160209182019188019080838360005b838110156109bf5781810151838201526020016109a7565b50505050905090810190601f1680156109ec5780820380516001836020036101000a031916815260200191505b5097505050505050505060206040518083038186803b158015610a0e57600080fd5b505af4158015610a22573d6000803e3d6000fd5b505050506040513d6020811015610a3857600080fd5b50511515610a4257fe5b7ff0bc00f5b90f382e1bbca216713ca9e2e8e298f9d7717d30847905395f2870468f8f60005b60408051938452602084019290925282820152519081900360600190a15060019e9d5050505050505050505050505050565b6000808681805b600154811015610add576001805482908110610ab957fe5b600091825260209091200154831415610ad55760019150610add565b600101610aa1565b811515610b34576040805160e560020a62461bcd02815260206004820152601760248201527f436861696e206973206e6f742072656769737465726564000000000000000000604482015290519081900360640190fd5b60008a81526002602052604081208b918b91815b8154811015610b83578181815481101515610b5f57fe5b600091825260209091200154841415610b7b5760019250610b83565b600101610b48565b821515610bda576040805160e560020a62461bcd02815260206004820152601e60248201527f426c6f636b20646f6573206e6f7420657869737420666f7220636861696e0000604482015290519081900360640190fd5b600360008f6000191660001916815260200190815260200160002098507338800a01ecf096d73c62878ac8e183bfe92cd82d634f7142ad8e8e8e8d600201546040518563ffffffff1660e060020a028152600401808060200180602001806020018560001916600019168152602001848103845288818151815260200191508051906020019080838360005b83811015610c7e578181015183820152602001610c66565b50505050905090810190601f168015610cab5780820380516001836020036101000a031916815260200191505b50848103835287518152875160209182019189019080838360005b83811015610cde578181015183820152602001610cc6565b50505050905090810190601f168015610d0b5780820380516001836020036101000a031916815260200191505b50848103825286518152865160209182019188019080838360005b83811015610d3e578181015183820152602001610d26565b50505050905090810190601f168015610d6b5780820380516001836020036101000a031916815260200191505b5097505050505050505060206040518083038186803b158015610d8d57600080fd5b505af4158015610da1573d6000803e3d6000fd5b505050506040513d6020811015610db757600080fd5b50511515610dc157fe5b7ff0bc00f5b90f382e1bbca216713ca9e2e8e298f9d7717d30847905395f2870468f8f6001610a68565b600260205281600052604060002081815481101515610e0657fe5b90600052602060002001600091509150505481565b610e23611305565b81516000811515610e495760408051808201909152600080825260208201529250610e67565b60208401905060408051908101604052808281526020018381525092505b5050919050565b60606000610e7a61131c565b6000610e8585611065565b1515610e9057600080fd5b610e998561108f565b925082604051908082528060200260200182016040528015610ed557816020015b610ec2611305565b815260200190600190039081610eba5790505b509350610ee1856110ff565b91505b610eed82611138565b15610f1b57610efb82611157565b8482815181101515610f0957fe5b60209081029091010152600101610ee4565b505050919050565b6020810151606090801515610f37576105af565b806040519080825280601f01601f191660200182016040528015610f65578160200160208202803883390190505b5091506105af83600001518383611199565b600080805b6020811015610ffd578060080285828601815181101515610f9957fe5b60209101015160029190910a7f0100000000000000000000000000000000000000000000000000000000000000918290049091027fff0000000000000000000000000000000000000000000000000000000000000016049190911790600101610f7c565b509392505050565b6000828152600260205260408120905b815481101561104d578154839083908390811061102e57fe5b600091825260209091200154141561104557600080fd5b600101611015565b50805460018101825560009182526020909120015550565b60008082602001516000141561107e57600091506105af565b5050515160c060009190911a101590565b6000806000806000806110a187611065565b15156110b057600095506110f5565b8651805160001a955093506110c4876111d9565b840192506001876020015185010391505b8183116110f1576110e583611259565b909201916001016110d5565b8095505b5050505050919050565b61110761131c565b600061111283611065565b151561111d57600080fd5b611126836111d9565b83519383529092016020820152919050565b6000611142611305565b50508051602080820151915192015191011190565b61115f611305565b60008061116b84611138565b1561007f578360200151915061118082611259565b8284526020808501829052838201908601529050610e67565b60006020601f83010484602085015b8284146111c6576020840282810151908201526001909301926111a8565b6000865160200187015250505050505050565b60008060008360200151600014156111f45760009250610e67565b50508151805160001a9060808210156112105760009250610e67565b60b882108061122b575060c0821015801561122b575060f882105b156112395760019250610e67565b60c082101561124e5760b51982019250610e67565b5060f5190192915050565b8051600090811a608081101561127257600191506105af565b60b881101561128757607e19810191506105af565b60c08110156112b057600183015160b76020839003016101000a9004810160b5190191506105af565b60f88110156112c55760be19810191506105af565b6001929092015160f76020849003016101000a900490910160f51901919050565b6060604051908101604052806003906020820280388339509192915050565b604080518082019091526000808252602082015290565b606060405190810160405280611330611305565b81526020016000815250905600a165627a7a7230582024e7bd39ca02a13e7b30d3f8eabcff1f54aa2b2794c25da896d910015790ad590029ab830ae0774cb20180c8b463202659184033a9f30a21550b89a2b406c3ac8075820bf9a0cf066fe78ea2e58000322d541b37763dc8d5daad8b301e63d0d2e5bdc3f2fe6ca048f44173b406c4ebd09b4f52174d00e6019820ea92f1caa5dd49d2f5652671ad
//HASHED NODE = 0xf79d0f0f21b250c65ce2817fde4f2d4bf2edb23de4b1f06550a8f2fa8e34aa4e
//EXTENSION NODE WITH PATHPTR = 2
//EP TX VALUE = 0xf91414820c5f85174876e800836691b78080b913bd608060405234801561001057600080fd5b5060405160208061139d8339810160405251600055611369806100346000396000f30060806040526004361061007f5763ffffffff60e060020a600035041663550325b581146100845780635a0235e4146100ae5780636b4f9b9d14610110578063927a32e3146101605780639a8a0592146101965780639e43d86b146101ab578063affd8be9146101c3578063bec205b9146102b3578063fecc37c31461038f575b600080fd5b34801561009057600080fd5b5061009c6004356103aa565b60408051918252519081900360200190f35b3480156100ba57600080fd5b50604080516020600460443581810135601f810184900484028501840190955284845261010e9482359460248035953695946064949201919081908401838280828437509497506103c99650505050505050565b005b34801561011c57600080fd5b5061012860043561056e565b6040518082606080838360005b8381101561014d578181015183820152602001610135565b5050505090500191505060405180910390f35b34801561016c57600080fd5b506101786004356105b5565b60408051938452602084019290925282820152519081900360600190f35b3480156101a257600080fd5b5061009c6105d6565b3480156101b757600080fd5b5061010e6004356105dc565b3480156101cf57600080fd5b50604080516020600460443581810135601f810184900484028501840190955284845261029f94823594602480359536959460649492019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375094975061071b9650505050505050565b604080519115158252519081900360200190f35b3480156102bf57600080fd5b50604080516020600460443581810135601f810184900484028501840190955284845261029f94823594602480359536959460649492019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a999881019791965091820194509250829150840183828082843750949750610a9a9650505050505050565b34801561039b57600080fd5b5061009c600435602435610deb565b60018054829081106103b857fe5b600091825260209091200154905081565b60606000808581805b60015481101561040e5760018054829081106103ea57fe5b600091825260209091200154831415610406576001915061040e565b6001016103d2565b811515610465576040805160e560020a62461bcd02815260206004820152601760248201527f436861696e206973206e6f742072656769737465726564000000000000000000604482015290519081900360640190fd5b61047661047188610e1b565b610e6e565b9550866040518082805190602001908083835b602083106104a85780518252601f199092019160209182019101610489565b5181516020939093036101000a600019018019909116921691909117905260405192018290039091209750505088861490506104e357600080fd5b6000888152600360205260408120875190955061051f9161051891899190811061050957fe5b90602001906020020151610f23565b6001610f77565b8455855161053890610518908890600490811061050957fe5b6001850155855161055490610518908890600590811061050957fe5b60028501556105638989611005565b505050505050505050565b6105766112e6565b50600081815260036020908152604091829020825160608101845281548152600182015492810192909252600281015492820192909252905b50919050565b60036020526000908152604090208054600182015460029092015490919083565b60005481565b6000805482141561065d576040805160e560020a62461bcd02815260206004820152602a60248201527f43616e6e6f7420616464207468697320636861696e20696420746f206368616960448201527f6e20726567697374657200000000000000000000000000000000000000000000606482015290519081900360840190fd5b5060005b6001548110156106e657600180548391908390811061067c57fe5b60009182526020909120015414156106de576040805160e560020a62461bcd02815260206004820152601460248201527f436861696e20616c726561647920657869737473000000000000000000000000604482015290519081900360640190fd5b600101610661565b506001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60155565b6000808681805b60015481101561075e57600180548290811061073a57fe5b600091825260209091200154831415610756576001915061075e565b600101610722565b8115156107b5576040805160e560020a62461bcd02815260206004820152601760248201527f436861696e206973206e6f742072656769737465726564000000000000000000604482015290519081900360640190fd5b60008a81526002602052604081208b918b91815b81548110156108045781818154811015156107e057fe5b6000918252602090912001548414156107fc5760019250610804565b6001016107c9565b82151561085b576040805160e560020a62461bcd02815260206004820152601e60248201527f426c6f636b20646f6573206e6f7420657869737420666f7220636861696e0000604482015290519081900360640190fd5b600360008f6000191660001916815260200190815260200160002098507338800a01ecf096d73c62878ac8e183bfe92cd82d634f7142ad8e8e8e8d600101546040518563ffffffff1660e060020a028152600401808060200180602001806020018560001916600019168152602001848103845288818151815260200191508051906020019080838360005b838110156108ff5781810151838201526020016108e7565b50505050905090810190601f16801561092c5780820380516001836020036101000a031916815260200191505b50848103835287518152875160209182019189019080838360005b8381101561095f578181015183820152602001610947565b50505050905090810190601f16801561098c5780820380516001836020036101000a031916815260200191505b50848103825286518152865160209182019188019080838360005b838110156109bf5781810151838201526020016109a7565b50505050905090810190601f1680156109ec5780820380516001836020036101000a031916815260200191505b5097505050505050505060206040518083038186803b158015610a0e57600080fd5b505af4158015610a22573d6000803e3d6000fd5b505050506040513d6020811015610a3857600080fd5b50511515610a4257fe5b7ff0bc00f5b90f382e1bbca216713ca9e2e8e298f9d7717d30847905395f2870468f8f60005b60408051938452602084019290925282820152519081900360600190a15060019e9d5050505050505050505050505050565b6000808681805b600154811015610add576001805482908110610ab957fe5b600091825260209091200154831415610ad55760019150610add565b600101610aa1565b811515610b34576040805160e560020a62461bcd02815260206004820152601760248201527f436861696e206973206e6f742072656769737465726564000000000000000000604482015290519081900360640190fd5b60008a81526002602052604081208b918b91815b8154811015610b83578181815481101515610b5f57fe5b600091825260209091200154841415610b7b5760019250610b83565b600101610b48565b821515610bda576040805160e560020a62461bcd02815260206004820152601e60248201527f426c6f636b20646f6573206e6f7420657869737420666f7220636861696e0000604482015290519081900360640190fd5b600360008f6000191660001916815260200190815260200160002098507338800a01ecf096d73c62878ac8e183bfe92cd82d634f7142ad8e8e8e8d600201546040518563ffffffff1660e060020a028152600401808060200180602001806020018560001916600019168152602001848103845288818151815260200191508051906020019080838360005b83811015610c7e578181015183820152602001610c66565b50505050905090810190601f168015610cab5780820380516001836020036101000a031916815260200191505b50848103835287518152875160209182019189019080838360005b83811015610cde578181015183820152602001610cc6565b50505050905090810190601f168015610d0b5780820380516001836020036101000a031916815260200191505b50848103825286518152865160209182019188019080838360005b83811015610d3e578181015183820152602001610d26565b50505050905090810190601f168015610d6b5780820380516001836020036101000a031916815260200191505b5097505050505050505060206040518083038186803b158015610d8d57600080fd5b505af4158015610da1573d6000803e3d6000fd5b505050506040513d6020811015610db757600080fd5b50511515610dc157fe5b7ff0bc00f5b90f382e1bbca216713ca9e2e8e298f9d7717d30847905395f2870468f8f6001610a68565b600260205281600052604060002081815481101515610e0657fe5b90600052602060002001600091509150505481565b610e23611305565b81516000811515610e495760408051808201909152600080825260208201529250610e67565b60208401905060408051908101604052808281526020018381525092505b5050919050565b60606000610e7a61131c565b6000610e8585611065565b1515610e9057600080fd5b610e998561108f565b925082604051908082528060200260200182016040528015610ed557816020015b610ec2611305565b815260200190600190039081610eba5790505b509350610ee1856110ff565b91505b610eed82611138565b15610f1b57610efb82611157565b8482815181101515610f0957fe5b60209081029091010152600101610ee4565b505050919050565b6020810151606090801515610f37576105af565b806040519080825280601f01601f191660200182016040528015610f65578160200160208202803883390190505b5091506105af83600001518383611199565b600080805b6020811015610ffd578060080285828601815181101515610f9957fe5b60209101015160029190910a7f0100000000000000000000000000000000000000000000000000000000000000918290049091027fff0000000000000000000000000000000000000000000000000000000000000016049190911790600101610f7c565b509392505050565b6000828152600260205260408120905b815481101561104d578154839083908390811061102e57fe5b600091825260209091200154141561104557600080fd5b600101611015565b50805460018101825560009182526020909120015550565b60008082602001516000141561107e57600091506105af565b5050515160c060009190911a101590565b6000806000806000806110a187611065565b15156110b057600095506110f5565b8651805160001a955093506110c4876111d9565b840192506001876020015185010391505b8183116110f1576110e583611259565b909201916001016110d5565b8095505b5050505050919050565b61110761131c565b600061111283611065565b151561111d57600080fd5b611126836111d9565b83519383529092016020820152919050565b6000611142611305565b50508051602080820151915192015191011190565b61115f611305565b60008061116b84611138565b1561007f578360200151915061118082611259565b8284526020808501829052838201908601529050610e67565b60006020601f83010484602085015b8284146111c6576020840282810151908201526001909301926111a8565b6000865160200187015250505050505050565b60008060008360200151600014156111f45760009250610e67565b50508151805160001a9060808210156112105760009250610e67565b60b882108061122b575060c0821015801561122b575060f882105b156112395760019250610e67565b60c082101561124e5760b51982019250610e67565b5060f5190192915050565b8051600090811a608081101561127257600191506105af565b60b881101561128757607e19810191506105af565b60c08110156112b057600183015160b76020839003016101000a9004810160b5190191506105af565b60f88110156112c55760be19810191506105af565b6001929092015160f76020849003016101000a900490910160f51901919050565b6060604051908101604052806003906020820280388339509192915050565b604080518082019091526000808252602082015290565b606060405190810160405280611330611305565b81526020016000815250905600a165627a7a7230582024e7bd39ca02a13e7b30d3f8eabcff1f54aa2b2794c25da896d910015790ad590029ab830ae0774cb20180c8b463202659184033a9f30a21550b89a2b406c3ac8075820bf9a0cf066fe78ea2e58000322d541b37763dc8d5daad8b301e63d0d2e5bdc3f2fe6ca048f44173b406c4ebd09b4f52174d00e6019820ea92f1caa5dd49d2f5652671ad
//EP TX PATH = 0x80
//EP TX PARENT NODES = 0xf91420f9141d822080b91417f91414820c5f85174876e800836691b78080b913bd608060405234801561001057600080fd5b5060405160208061139d8339810160405251600055611369806100346000396000f30060806040526004361061007f5763ffffffff60e060020a600035041663550325b581146100845780635a0235e4146100ae5780636b4f9b9d14610110578063927a32e3146101605780639a8a0592146101965780639e43d86b146101ab578063affd8be9146101c3578063bec205b9146102b3578063fecc37c31461038f575b600080fd5b34801561009057600080fd5b5061009c6004356103aa565b60408051918252519081900360200190f35b3480156100ba57600080fd5b50604080516020600460443581810135601f810184900484028501840190955284845261010e9482359460248035953695946064949201919081908401838280828437509497506103c99650505050505050565b005b34801561011c57600080fd5b5061012860043561056e565b6040518082606080838360005b8381101561014d578181015183820152602001610135565b5050505090500191505060405180910390f35b34801561016c57600080fd5b506101786004356105b5565b60408051938452602084019290925282820152519081900360600190f35b3480156101a257600080fd5b5061009c6105d6565b3480156101b757600080fd5b5061010e6004356105dc565b3480156101cf57600080fd5b50604080516020600460443581810135601f810184900484028501840190955284845261029f94823594602480359536959460649492019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375094975061071b9650505050505050565b604080519115158252519081900360200190f35b3480156102bf57600080fd5b50604080516020600460443581810135601f810184900484028501840190955284845261029f94823594602480359536959460649492019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a999881019791965091820194509250829150840183828082843750949750610a9a9650505050505050565b34801561039b57600080fd5b5061009c600435602435610deb565b60018054829081106103b857fe5b600091825260209091200154905081565b60606000808581805b60015481101561040e5760018054829081106103ea57fe5b600091825260209091200154831415610406576001915061040e565b6001016103d2565b811515610465576040805160e560020a62461bcd02815260206004820152601760248201527f436861696e206973206e6f742072656769737465726564000000000000000000604482015290519081900360640190fd5b61047661047188610e1b565b610e6e565b9550866040518082805190602001908083835b602083106104a85780518252601f199092019160209182019101610489565b5181516020939093036101000a600019018019909116921691909117905260405192018290039091209750505088861490506104e357600080fd5b6000888152600360205260408120875190955061051f9161051891899190811061050957fe5b90602001906020020151610f23565b6001610f77565b8455855161053890610518908890600490811061050957fe5b6001850155855161055490610518908890600590811061050957fe5b60028501556105638989611005565b505050505050505050565b6105766112e6565b50600081815260036020908152604091829020825160608101845281548152600182015492810192909252600281015492820192909252905b50919050565b60036020526000908152604090208054600182015460029092015490919083565b60005481565b6000805482141561065d576040805160e560020a62461bcd02815260206004820152602a60248201527f43616e6e6f7420616464207468697320636861696e20696420746f206368616960448201527f6e20726567697374657200000000000000000000000000000000000000000000606482015290519081900360840190fd5b5060005b6001548110156106e657600180548391908390811061067c57fe5b60009182526020909120015414156106de576040805160e560020a62461bcd02815260206004820152601460248201527f436861696e20616c726561647920657869737473000000000000000000000000604482015290519081900360640190fd5b600101610661565b506001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60155565b6000808681805b60015481101561075e57600180548290811061073a57fe5b600091825260209091200154831415610756576001915061075e565b600101610722565b8115156107b5576040805160e560020a62461bcd02815260206004820152601760248201527f436861696e206973206e6f742072656769737465726564000000000000000000604482015290519081900360640190fd5b60008a81526002602052604081208b918b91815b81548110156108045781818154811015156107e057fe5b6000918252602090912001548414156107fc5760019250610804565b6001016107c9565b82151561085b576040805160e560020a62461bcd02815260206004820152601e60248201527f426c6f636b20646f6573206e6f7420657869737420666f7220636861696e0000604482015290519081900360640190fd5b600360008f6000191660001916815260200190815260200160002098507338800a01ecf096d73c62878ac8e183bfe92cd82d634f7142ad8e8e8e8d600101546040518563ffffffff1660e060020a028152600401808060200180602001806020018560001916600019168152602001848103845288818151815260200191508051906020019080838360005b838110156108ff5781810151838201526020016108e7565b50505050905090810190601f16801561092c5780820380516001836020036101000a031916815260200191505b50848103835287518152875160209182019189019080838360005b8381101561095f578181015183820152602001610947565b50505050905090810190601f16801561098c5780820380516001836020036101000a031916815260200191505b50848103825286518152865160209182019188019080838360005b838110156109bf5781810151838201526020016109a7565b50505050905090810190601f1680156109ec5780820380516001836020036101000a031916815260200191505b5097505050505050505060206040518083038186803b158015610a0e57600080fd5b505af4158015610a22573d6000803e3d6000fd5b505050506040513d6020811015610a3857600080fd5b50511515610a4257fe5b7ff0bc00f5b90f382e1bbca216713ca9e2e8e298f9d7717d30847905395f2870468f8f60005b60408051938452602084019290925282820152519081900360600190a15060019e9d5050505050505050505050505050565b6000808681805b600154811015610add576001805482908110610ab957fe5b600091825260209091200154831415610ad55760019150610add565b600101610aa1565b811515610b34576040805160e560020a62461bcd02815260206004820152601760248201527f436861696e206973206e6f742072656769737465726564000000000000000000604482015290519081900360640190fd5b60008a81526002602052604081208b918b91815b8154811015610b83578181815481101515610b5f57fe5b600091825260209091200154841415610b7b5760019250610b83565b600101610b48565b821515610bda576040805160e560020a62461bcd02815260206004820152601e60248201527f426c6f636b20646f6573206e6f7420657869737420666f7220636861696e0000604482015290519081900360640190fd5b600360008f6000191660001916815260200190815260200160002098507338800a01ecf096d73c62878ac8e183bfe92cd82d634f7142ad8e8e8e8d600201546040518563ffffffff1660e060020a028152600401808060200180602001806020018560001916600019168152602001848103845288818151815260200191508051906020019080838360005b83811015610c7e578181015183820152602001610c66565b50505050905090810190601f168015610cab5780820380516001836020036101000a031916815260200191505b50848103835287518152875160209182019189019080838360005b83811015610cde578181015183820152602001610cc6565b50505050905090810190601f168015610d0b5780820380516001836020036101000a031916815260200191505b50848103825286518152865160209182019188019080838360005b83811015610d3e578181015183820152602001610d26565b50505050905090810190601f168015610d6b5780820380516001836020036101000a031916815260200191505b5097505050505050505060206040518083038186803b158015610d8d57600080fd5b505af4158015610da1573d6000803e3d6000fd5b505050506040513d6020811015610db757600080fd5b50511515610dc157fe5b7ff0bc00f5b90f382e1bbca216713ca9e2e8e298f9d7717d30847905395f2870468f8f6001610a68565b600260205281600052604060002081815481101515610e0657fe5b90600052602060002001600091509150505481565b610e23611305565b81516000811515610e495760408051808201909152600080825260208201529250610e67565b60208401905060408051908101604052808281526020018381525092505b5050919050565b60606000610e7a61131c565b6000610e8585611065565b1515610e9057600080fd5b610e998561108f565b925082604051908082528060200260200182016040528015610ed557816020015b610ec2611305565b815260200190600190039081610eba5790505b509350610ee1856110ff565b91505b610eed82611138565b15610f1b57610efb82611157565b8482815181101515610f0957fe5b60209081029091010152600101610ee4565b505050919050565b6020810151606090801515610f37576105af565b806040519080825280601f01601f191660200182016040528015610f65578160200160208202803883390190505b5091506105af83600001518383611199565b600080805b6020811015610ffd578060080285828601815181101515610f9957fe5b60209101015160029190910a7f0100000000000000000000000000000000000000000000000000000000000000918290049091027fff0000000000000000000000000000000000000000000000000000000000000016049190911790600101610f7c565b509392505050565b6000828152600260205260408120905b815481101561104d578154839083908390811061102e57fe5b600091825260209091200154141561104557600080fd5b600101611015565b50805460018101825560009182526020909120015550565b60008082602001516000141561107e57600091506105af565b5050515160c060009190911a101590565b6000806000806000806110a187611065565b15156110b057600095506110f5565b8651805160001a955093506110c4876111d9565b840192506001876020015185010391505b8183116110f1576110e583611259565b909201916001016110d5565b8095505b5050505050919050565b61110761131c565b600061111283611065565b151561111d57600080fd5b611126836111d9565b83519383529092016020820152919050565b6000611142611305565b50508051602080820151915192015191011190565b61115f611305565b60008061116b84611138565b1561007f578360200151915061118082611259565b8284526020808501829052838201908601529050610e67565b60006020601f83010484602085015b8284146111c6576020840282810151908201526001909301926111a8565b6000865160200187015250505050505050565b60008060008360200151600014156111f45760009250610e67565b50508151805160001a9060808210156112105760009250610e67565b60b882108061122b575060c0821015801561122b575060f882105b156112395760019250610e67565b60c082101561124e5760b51982019250610e67565b5060f5190192915050565b8051600090811a608081101561127257600191506105af565b60b881101561128757607e19810191506105af565b60c08110156112b057600183015160b76020839003016101000a9004810160b5190191506105af565b60f88110156112c55760be19810191506105af565b6001929092015160f76020849003016101000a900490910160f51901919050565b6060604051908101604052806003906020820280388339509192915050565b604080518082019091526000808252602082015290565b606060405190810160405280611330611305565b81526020016000815250905600a165627a7a7230582024e7bd39ca02a13e7b30d3f8eabcff1f54aa2b2794c25da896d910015790ad590029ab830ae0774cb20180c8b463202659184033a9f30a21550b89a2b406c3ac8075820bf9a0cf066fe78ea2e58000322d541b37763dc8d5daad8b301e63d0d2e5bdc3f2fe6ca048f44173b406c4ebd09b4f52174d00e6019820ea92f1caa5dd49d2f5652671ad
//PATH = 0x80
//RLP ENCODED NODE = 0xf90112822080b9010cf901090183154958bc0
//HASHED NODE = 0x6fc7cc2a8c59c0e2c84fe806d652e636d1a513b9c3cefbe0b53920c5787a1e2c
//EXTENSION NODE WITH PATHPTR = 2
//EP RECEIPT VALUE = 0xf901090183154958b9010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c0
//EP RECEIPT PATH = 0x80
//EP RECEIPT PARENT NODES = 0xf90115f90112822080b9010cf901090183154958bc0

contract('Ion.js', (accounts) => {
    it('Deploy Ion', async () => {
        const ion = await Ion.new(DEPLOYEDCHAINID);
        let chainId = await ion.chainId();

        assert.equal(chainId, DEPLOYEDCHAINID);
    })

    it('Register Chain', async () => {
        const ion = await Ion.new(DEPLOYEDCHAINID);

        // Successfully add id of another chain
        await ion.RegisterChain(TESTCHAINID);
        let chain = await ion.chains.call(0);

        assert.equal(chain, TESTCHAINID);

        // Fail adding id of this chain
        await ion.RegisterChain(DEPLOYEDCHAINID).should.be.rejected;

        // Fail adding id of chain already registered
        await ion.RegisterChain(TESTCHAINID).should.be.rejected;
    })

    it('Submit Block', async () => {
        const ion = await Ion.new(DEPLOYEDCHAINID);

        await ion.RegisterChain(TESTCHAINID);

        // Submit block should succeed
        await ion.SubmitBlock(TESTCHAINID, TESTBLOCK.hash, TESTRLPENCODING)

        let blockHash = await ion.m_blockhashes(TESTCHAINID, 0);
        let header = await ion.getBlockHeader.call(blockHash);

        // Separate fetched header info
        parentHash = header[0];
        txRootHash = header[1];
        receiptRootHash = header[2];

        // Assert that block was persisted correctly
        assert.equal(blockHash, TESTBLOCK.hash);
        assert.equal(parentHash, TESTBLOCK.parentHash);
        assert.equal(txRootHash, TESTBLOCK.transactionsRoot);
        assert.equal(receiptRootHash, TESTBLOCK.receiptsRoot);
    })

    it('Fail Submit Block from unknown chain', async () => {
        const ion = await Ion.new(DEPLOYEDCHAINID);

        await ion.RegisterChain(TESTCHAINID);

        await ion.SubmitBlock(TESTCHAINID.slice(0, -2) + "ff", "0xe40cd510f5e415980a2a18ab97b1983c7da43ee56b299cf931c35d9c9ce435f2", "0xf9025ea0f4d7435eff2fcff295eca2c97a1299eeb1d2ce479b4c6e0e799f4a7bed6e4f72a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347940000000000000000000000000000000000000000a019ac400db348a4975008c6e75c537bce261d116bcd74d8b75a9d6992e3b161eda087c9f55218d8784fa39a773791633e9d007a99bef43c12233ebf980810d47464a05ad439bb61e71db83d139847424ac55990546a1b55cc5dd12a57850fd47af845bd2880d08334ef5308dff826928845b23c06eb861d88301080b846765746888676f312e31302e32856c696e757800000000000000461bc1df80fdafba4508e41ef01a570b7998fa0c64eaae65d62e57929afc232a0656a0a43e10387ffebcc8837d1c0d28ab801313e18775f574e73f119452b42e01a00000000000000000000000000000000000000000000000000000000000000000880000000000000000").should.be.rejected;
    })

    it('Fail Submit Block with wrong block hash', async () => {
        const ion = await Ion.new(DEPLOYEDCHAINID);

        await ion.RegisterChain(TESTCHAINID);

        await ion.SubmitBlock(TESTCHAINID, "0xe4" + "1" + "cd510f5e415980a2a18ab97b1983c7da43ee56b299cf931c35d9c9ce435f2", "0xf9025ea0f4d7435eff2fcff295eca2c97a1299eeb1d2ce479b4c6e0e799f4a7bed6e4f72a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347940000000000000000000000000000000000000000a019ac400db348a4975008c6e75c537bce261d116bcd74d8b75a9d6992e3b161eda087c9f55218d8784fa39a773791633e9d007a99bef43c12233ebf980810d47464a05ad439bb61e71db83d139847424ac55990546a1b55cc5dd12a57850fd47af845bd2880d08334ef5308dff826928845b23c06eb861d88301080b846765746888676f312e31302e32856c696e757800000000000000461bc1df80fdafba4508e41ef01a570b7998fa0c64eaae65d62e57929afc232a0656a0a43e10387ffebcc8837d1c0d28ab801313e18775f574e73f119452b42e01a00000000000000000000000000000000000000000000000000000000000000000880000000000000000").should.be.rejected;
    })

    it('Check Tx Proof', async () => {
        const ion = await Ion.new(DEPLOYEDCHAINID);

        await ion.RegisterChain(TESTCHAINID);

        await ion.SubmitBlock(TESTCHAINID, TESTBLOCK.hash, TESTRLPENCODING);

        await ion.CheckTxProof(TESTCHAINID, TESTBLOCK.hash, TEST_TX_VALUE, TEST_TX_NODES, TEST_PATH);
    })

//    it('Check Infura Proofs', async () => {
//
//        var eP = new EP(new Web3.providers.HttpProvider("https://gmainnet.infura.io"));
//
//
//        var txValue;
//        var txPath;
//        var txParentNodes;
//        await eP.getTransactionProof("0x07a911c87c6e656e2f83c30e0cbdac47789fd874c747337ad1776b7dd5238893").then( (proof) => {
//            verified = EP.transaction(proof.path, proof.value, proof.parentNodes, proof.header, proof.blockHash);
//            assert(verified);
//
//            txValue = rlp.encode(proof.value);
//            txPath = rlp.encode(proof.path);
//            txParentNodes = rlp.encode(proof.parentNodes);
//        })
//
//
//        console.log("EP TX VALUE = 0x" + txValue.toString('hex'));
//        console.log("EP TX PATH = 0x" + txPath.toString('hex'));
//        console.log("EP TX PARENT NODES = 0x" + txParentNodes.toString('hex'));
//
//    })

    it('Fail Tx Proof', async () => {
        const ion = await Ion.new(DEPLOYEDCHAINID);

        await ion.RegisterChain(TESTCHAINID);

        await ion.SubmitBlock(TESTCHAINID, TESTBLOCK.hash, TESTRLPENCODING);

        // Fail with wrong chain ID
        await ion.CheckTxProof(DEPLOYEDCHAINID, TESTBLOCK.hash, TEST_TX_VALUE, TEST_TX_NODES, TEST_PATH).should.be.rejected;

        // Fail with wrong block hash
        await ion.CheckTxProof(TESTCHAINID, TESTBLOCK.hash.substring(0, 30) + "ff", TEST_TX_VALUE, TEST_TX_NODES, TEST_PATH).should.be.rejected;

        // Fail with wrong path
        await ion.CheckTxProof(TESTCHAINID, TESTBLOCK.hash, TEST_TX_VALUE, TEST_TX_NODES, "0xff").should.be.rejected;
    })

//    it('Check EP Receipt Proofs', async () => {
//
//        var eP = new EP(new Web3.providers.HttpProvider("https://gmainnet.infura.io"));
//
//        await eP.getReceiptTrieRoot("0x07a911c87c6e656e2f83c30e0cbdac47789fd874c747337ad1776b7dd5238893").then( (root) => {
//            console.log("EP Root hash = 0x" + root.toString('hex'))
//        })
//
//        var txValue;
//        var txPath;
//        var txParentNodes;
//        await eP.getReceiptProof("0x07a911c87c6e656e2f83c30e0cbdac47789fd874c747337ad1776b7dd5238893").then( (proof) => {
//            verified = EP.receipt(proof.path, proof.value, proof.parentNodes, proof.header, proof.blockHash);
//            assert(verified);
//
//            txValue = rlp.encode(proof.value);
//            txPath = proof.path;
//            txParentNodes = rlp.encode(proof.parentNodes);
//        })
//
//        console.log("EP RECEIPT VALUE = 0x" + txValue.toString('hex'));
//        console.log("EP RECEIPT PATH = 0x" + txPath.toString('hex'));
//        console.log("EP RECEIPT PARENT NODES = 0x" + txParentNodes.toString('hex'));
//
//    })

    it('Check Receipt Proof', async () => {
        const ion = await Ion.new(DEPLOYEDCHAINID);

        await ion.RegisterChain(TESTCHAINID);

        await ion.SubmitBlock(TESTCHAINID, TESTBLOCK.hash, TESTRLPENCODING);

        await ion.CheckReceiptProof(TESTCHAINID, TESTBLOCK.hash, TEST_RECEIPT_VALUE, TEST_RECEIPT_NODES, TEST_PATH);
    })

    it('Fail Receipt Proof', () => {

    })

    it('Check Roots Proof', () => {

    })

    it('Fail Roots Proof', () => {

    })
})
